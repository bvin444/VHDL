library ieee;
use ieee.std_logic_1164.all;

entity traffic_light is
    port (
        clk    : in std_logic;
        rst    : in std_logic;
        green  : out std_logic;
        yellow : out std_logic;
        red    : out std_logic
    );
end traffic_light;

architecture behavioral of traffic_light is

    type state_type is (s_green, s_yellow, s_red);
    signal current_state : state_type := s_green;    
    signal counter : integer := 0;
    signal out_G : std_logic := '0';
    signal out_Y : std_logic := '0';
    signal out_R : std_logic := '0';

begin

    process(clk)
    begin
        if rising_edge(clk) then     
            if current_state = s_green then
                if counter = 10 then
                    counter <= 0;
                    current_state <= s_yellow;
                else
                    counter <= counter + 1;
                end if;
            elsif current_state = s_yellow then
                if counter = 2 then
                    counter <= 0;
                    current_state <= s_red;
                else
                    counter <= counter + 1;
                end if;
            elsif current_state = s_red then
                if counter = 15 then
                    counter <= 0;
                    current_state <= s_green;
                else
                    counter <= counter + 1;   
                end if;
            end if;
        end if;
    end process;
    process(current_state)
    begin
        out_G <= '0';
        out_Y <= '0';
        out_R <= '0';
        if current_state = s_green then
            out_G <= '1';
        elsif current_state = s_yellow then
            out_Y <= '1';
        elsif current_state = s_red then
            out_R <= '1';
        end if;
    end process;
    green <= out_G;
    yellow <= out_Y;
    red <= out_R;
end behavioral;
